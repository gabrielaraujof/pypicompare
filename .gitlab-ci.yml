.angular_cli: &ng_image
  image: node:latest

.npm_install:
  - &npm_install
    npm install --quiet

image: registry.gitlab.com/gitlab-examples/openshift-deploy

stages:
  - check
  - bundle
  - deploy
  - cleanup

cache:
  untracked: true
  key: "$CI_COMMIT_REF_NAME/$CI_PIPELINE_ID"
  paths:
  - node_modules

lint:
  stage: check
  <<: *ng_image
  script:
    - *npm_install
    - node_modules/.bin/ng lint
  only:
    - branches

test:
  stage: check
  <<: *ng_image
  script:
    - *npm_install
    - node_modules/.bin/ng test -sr
  only:
    - branches

build:
  stage: check
  <<: *ng_image
  script:
    - *npm_install
    - node_modules/.bin/ng build --prod
  artifacts:
    paths:
    - dist/
  only:
    - branches

docker-image:
  stage: bundle
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:docker-image" .
    - docker push "$CI_REGISTRY_IMAGE:docker-image"
  dependencies:
    - build
  only:
    - branches

review:
  stage: deploy
  variables:
    CI_ENVIRONMENT_URL: http://$CI_COMMIT_REF_NAME-review-$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
  script:
    - command deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_NAME.review-$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
    on_stop: stop_review
  dependencies:
    - build
  only:
    - branches
  except:
    - master

staging:
  stage: deploy
  variables:
    CI_ENVIRONMENT_URL: http://staging-$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
  script:
    - command deploy
  environment:
    name: staging
    url: http://staging-$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
  dependencies:
    - build
  only:
    - master

production:
  stage: deploy
  variables:
    CI_ENVIRONMENT_URL: http://$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
  script:
    - command deploy
  environment:
    name: production
    url: http://$KUBE_NAMESPACE.1d35.$OPENSHIFT_DOMAIN
  dependencies:
    - build
  when: manual
  only:
    - master

stop_review:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - command destroy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master
